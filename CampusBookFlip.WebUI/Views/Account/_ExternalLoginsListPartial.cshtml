@model ICollection<AuthenticationClientData>

@if (Model.Count > 0)
{
    using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = ViewBag.ReturnUrl }))
    {
    @Html.AntiForgeryToken()
    <fieldset id="socialLoginList">
        <legend>Log in using another service</legend>
        @foreach (AuthenticationClientData p in Model)
        {
            if(p.DisplayName.ToLower().Equals("facebook")) 
            {
                @*<div class="btn-group">*@
                    
                    <button class="btn btn-facebook" type="submit" name="provider" value="@p.AuthenticationClient.ProviderName" title="Log in using your @p.DisplayName account"><i class="fa fa-facebook"></i> | @p.DisplayName</button>
                @*</div>*@
            }
            else if(p.DisplayName.ToLower().Equals("google")) 
            {
                @*<div class="btn-group">*@
                    
                    <button class="btn btn-google-plus" type="submit" name="provider" value="@p.AuthenticationClient.ProviderName" title="Log in using your @p.DisplayName account"><i class="fa fa-google-plus"></i> | @p.DisplayName</button>
                @*</div>*@
            }
            else if(p.DisplayName.ToLower().Equals("twitter")) 
            {
                @*<div class="btn-group">*@
                    
                    <button class="btn btn-twitter" type="submit" name="provider" value="@p.AuthenticationClient.ProviderName" title="Log in using your @p.DisplayName account"><i class="fa fa-twitter"></i> | @p.DisplayName</button>
                @*</div>*@
            }
            else 
            {
                <button class="btn btn-info" type="submit" name="provider" value="@p.AuthenticationClient.ProviderName" title="Log in using your @p.DisplayName account">@p.DisplayName</button>
            }
        }
    </fieldset>
    }
}
